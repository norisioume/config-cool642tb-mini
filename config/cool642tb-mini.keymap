#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        shift_tab {
            bindings = <&kp LANG2>;
            key-positions = <12 13>;
        };

        lang {
            bindings = <&kp LANG1>;
            key-positions = <18 19>;
        };
    };

    behaviors {
        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W       &kp E         &kp R                &kp T                                             &kp Y            &kp U  &lt 5 I    &kp O    &kp P
&kp A      &kp S       &kp D         &kp F                &kp G           &trans         &kp C_VOLUME_UP    &kp H            &kp J  &kp K      &lt 4 L  &kp ENTER
&kp Z      &kp X       &kp C         &kp V                &kp B           &mo 7          &kp C_VOLUME_DOWN  &kp N            &kp M  &kp COMMA  &kp DOT  &kp MINUS
&kp LCTRL  &kp LSHIFT  &kp LEFT_GUI  &mt LALT LANGUAGE_2  &lt 4 INT_KANA  &lt 2 TAB      &lt 1 GRAVE        &mt LSHFT SPACE                             &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp RG(SEMI) LG(MINUS)>;
        };

        CHAR {
            bindings = <
&kp EXCLAMATION   &kp QUESTION  &kp AT         &kp AMPERSAND     &kp LS(INTERNATIONAL_3)                      &kp EQUAL  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_BRACKET  &kp BACKSLASH
&kp LEFT_BRACKET  &kp LS(INT1)  &kp SEMICOLON  &kp SINGLE_QUOTE  &kp SLASH                &trans      &trans  &kp UNDER  &kp COLON      &kp MINUS             &kp DOUBLE_QUOTES  &kp SLASH
&kp DOLLAR        &kp PERCENT   &kp CARET      &kp HASH          &kp INTERNATIONAL_3      &trans      &trans  &kp PLUS   &kp LS(COMMA)  &kp LS(PERIOD)        &kp RIGHT_BRACE    &kp PIPE
&trans            &trans        &trans         &trans            &trans                   &trans      &trans  &trans                                                             &trans
            >;
        };

        NUM {
            bindings = <
&trans     &kp F7  &kp F8  &kp F9  &kp F12                           &kp SLASH          &kp N7  &kp N8  &kp N9  &kp BACKSPACE
&kp LSHFT  &kp F4  &kp F5  &kp F6  &kp F11    &trans      &trans     &kp DOUBLE_QUOTES  &kp N4  &kp N5  &kp N6  &kp ENTER
&kp LCTRL  &kp F1  &kp F2  &kp F3  &kp F10    &trans      &trans     &kp MINUS          &kp N1  &kp N2  &kp N3  &kp UNDER
&trans     &trans  &trans  &trans  &kp SPACE  &trans      &kp COLON  &kp N0                                     &kp PERIOD
            >;
        };

        ARROW {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&kp ESCAPE  &kp END                 &kp UP_ARROW  &kp HOME                 &kp PAGE_UP                        &kp RG(COLON)  &msc MOVE_Y(-20)  &mo 5      &msc MOVE_Y(20)  &kp PRINTSCREEN
&kp LSHFT   &kp LEFT                &kp DOWN      &kp RIGHT_ARROW          &kp PAGE_DOWN  &trans      &trans  &kp RG(MINUS)  &mkp MB1          &mkp MB2   &trans           &trans
&kp LCTRL   &kp LC(LG(LEFT_ARROW))  &kp LG(TAB)   &kp LC(LG(RIGHT_ARROW))  &kp LG(D)      &trans      &trans  &kp LC(Z)      &kp LC(A)         &kp LC(X)  &kp LC(C)        &kp LC(V)
&trans      &trans                  &trans        &trans                   &trans         &trans      &trans  &trans                                                       &kp DEL
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        setting {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                &trans  &trans  &trans  &trans  &sys_reset
&trans        &trans        &trans        &trans        &trans        &trans           &trans       &trans  &trans  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans           &trans       &trans  &trans  &trans  &trans  &trans
&bt BT_CLR    &trans        &trans        &trans        &trans        &bootloader      &bootloader  &trans                          &trans
            >;
        };
    };
};
